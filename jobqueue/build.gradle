import java.util.regex.Pattern
import com.android.builder.core.BuilderConstants
task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

configurations {
    archives {
        extendsFrom configurations.default
    }
}

apply plugin: 'android-library'

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
        }
    }
}

//READ VERSION NAME
def manifestFile = file("AndroidManifest.xml")
def pattern = Pattern.compile("versionName=\"([\\d\\.\\w\\-]+)\"")
def manifestText = manifestFile.getText()
def matcher = pattern.matcher(manifestText)
matcher.find()
def manifestVersionName = matcher.group(1)
println "version name:${manifestVersionName}"

//create jar tasks
android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    println "checking variant ${name}"
    if (name.equals(BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def suffix = name.capitalize()
    println "found release variant"
    def jarTask = project.tasks.create(name: "jar${suffix}", type: Jar){
        dependsOn variant.javaCompile
        from variant.javaCompile.destinationDir
        from 'LICENSE.txt'
    }
    def javadocTask = project.tasks.create(name: "javadoc${suffix}", type: Javadoc) {
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
    }

    def javadocJarTask = project.tasks.create(name: "javadocJar${suffix}", type: Jar) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    def sourcesJarTask = project.tasks.create(name: "sourceJar${suffix}", type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
    artifacts.add('archives', jarTask);
    artifacts.add('archives', javadocJarTask);
    artifacts.add('archives', sourcesJarTask);
}
